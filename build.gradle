
buildscript {
	ext {
		springBootVersion = '2.0.0.M6'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'com.palantir.docker'
// 初回は以下実行要
// ./gradlew cleanIdea idea
// 通常起動>>　　./gradlew bootrun
// http://localhost:8080/swagger-ui.html
group = 'com.example.takahashi'
jar.baseName = 'springotamashi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
defaultTasks "clean", "build"
repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	jcenter()
}


ext {
	springCloudVersion = 'Finchley.M3'
}

dependencies {
	//compile('org.springframework.boot:spring-boot-starter-actuator')
	//compile('org.springframework.cloud:spring-cloud-starter-security')
	//compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	
	// for Thymeleaf
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile("org.springframework.cloud:spring-cloud-starter-sleuth")
//compile ('org.springframework.security:spring-security-web:5.0.0.RELEASE')
	//compile ('org.springframework.security:spring-security-config:5.0.0.RELEASE')
	
	runtime('org.springframework.boot:spring-boot-devtools')
	//testCompile('org.springframework.boot:spring-boot-starter-test')
	//testCompile('org.springframework.security:spring-security-test')
	
	// data-rest
	compile('org.lazyluke:log4jdbc-remix:0.2.7')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	runtime('com.h2database:h2')
	
	compile "io.springfox:springfox-swagger2:2.7.0"
    compile "io.springfox:springfox-swagger-ui:2.7.0"
    compile "com.google.guava:guava:17.0"
    
    //for heroku
    compile "org.springframework.boot:spring-boot-starter-jetty"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

docker {
    name "${project.group}/${jar.baseName}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}